# user-service/src/main/resources/application.properties
# This file contains the configuration for the database connection and Spring JPA settings.
# The values are now hardcoded to ensure the application connects to the database.
spring.datasource.url=jdbc:mysql://db:3306/ecommerce_db?createDatabaseIfNotExist=true
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA properties for database schema management
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Spring Web configuration
server.port=8080

# ADDED: JWT Security Properties
# The secret key is used to sign the tokens. It must be a base64-encoded string and kept secure.
# You can generate a random one using an online tool or a script.
# Example: echo "your-strong-random-secret-key-that-is-at-least-256-bits-long" | base64
application.security.jwt.secret-key=c2VjcmV0LWtleS13aGF0LXRvLWRvLXdpdGgtdGhpcy1rZXk/LWRvLW5vdC11c2UtdGhpcy1pbC13aWxsLWJlbi1hLXNlY3VyaXR5LXJpc2stZ2VuZXJhdGUtYS1uZXYtc2VjcmV0LWtleS13aGF0LWlzLWdyaXR1ZHUtZGl2aXNpb24tZGlnaXRhbC1wcm9qZWN0LXR5cGUtc2VjdXJpdHktZm9yLXByb2R1Y3Rpb24tb3ItZGV2ZWxvcG1lbnQtYXBwbGljYXRpb24tYnV0LWZvcndhcmQtdGhpcy1pcy1hLWZ1bGx5LXNlY3VyZS1hcHBsaWNhdGlvbi1mb3ItLXByb2R1Y3Rpb24tYXBwcy13aGF0LWRvLXlvdS10aGlua2E/
# The JWT expiration time in milliseconds (1 day).
application.security.jwt.expiration=86400000